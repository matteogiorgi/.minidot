#!/usr/bin/env bash

# This script resets VSCode setting using VSpaceCode extensions pack:
#     [--movi] resets VSCode Vim-like style
#     [--novi] resets VSCode without Vim goodies
#     [--zero] removes all VSCode configurations (rm -rf ~/.config/Code/User)

# Here the full set of extensions installed by this script:
# (for more information visit https://vspacecode.github.io/)
#     VSPACECODE   https://marketplace.visualstudio.com/items?itemName=VSpaceCode.vspacecode
#     WHICH-KEY    https://marketplace.visualstudio.com/items?itemName=VSpaceCode.whichkey
#     VIM          https://marketplace.visualstudio.com/items?itemName=vscodevim.vim
#     FUZZY-SEARCH https://marketplace.visualstudio.com/items?itemName=jacobdufault.fuzzy-search
#     FILE-BROWSER https://marketplace.visualstudio.com/items?itemName=bodil.file-browser
#     EDAMAGIT     https://marketplace.visualstudio.com/items?itemName=kahole.magit
#     MONOKAI-PRO  https://marketplace.visualstudio.com/items?itemName=monokai.theme-monokai-pro-vscode




### Functions
#############

_check () {
    # if $CODE is non executable,
    # install $CODE and run rscode again.
    # ---
    if [[ ! -x "$(command -v "${CODE}")" ]]; then
        printf "\n"
        printf "═══════ Warning: ${CODE} not found ══════\n"
        printf "Install ${CODE} and run this script again\n"
        exit 1
    fi
}


_reset () {
    # remove all the extensions present and
    # install a full mint configuration
    # ---
    _check
    printf "%s\n" "${OPERATION}"
    # ---
    LIST=$("${CODE}" --list-extensions)
    for EXTENSION in $LIST; do
        "${CODE}" --uninstall-extension "${EXTENSION}" &>/dev/null
    done
    # ---
    "${CODE}" --install-extension vspacecode.vspacecode &>/dev/null
    "${CODE}" --install-extension github.copilot &>/dev/null
    "${CODE}" --install-extension monokai.theme-monokai-pro-vscode &>/dev/null
    cat "${CONF}/vspacecode-settings.json" > "${USER}/settings.json"
    cat "${CONF}/vspacecode-keybindings.json" > "${USER}/keybindings.json"
}


_novi () {
    # remove all the extensions present and install
    # a simple configuration without Vim goodies
    # ---
    _check
    printf "%s\n" "${OPERATION}"
    # ---
    LIST=$("${CODE}" --list-extensions)
    for EXTENSION in $LIST; do
        "${CODE}" --uninstall-extension "${EXTENSION}" &>/dev/null
    done
    # ---
    "${CODE}" --install-extension github.copilot &>/dev/null
    "${CODE}" --install-extension monokai.theme-monokai-pro-vscode &>/dev/null
    cat "${CONF}/novi-settings.json" > "${USER}/settings.json"
    cat "${CONF}/novi-keybindings.json" > "${USER}/keybindings.json"
}


_zero () {
    # remove all the extensions and configurations
    # previously installed to get a clean $CODE
    # ---
    _check
    printf "%s\n" "${OPERATION}"
    # ---
    LIST=$("${CODE}" --list-extensions)
    for EXTENSION in $LIST; do
        "${CODE}" --uninstall-extension "${EXTENSION}" &>/dev/null
    done
    # ---
    [[ -f "${USER}/settings.json" ]] && rm -f "${USER}/settings.json"
    [[ -f "${USER}/keybindings.json" ]] && rm -f "${USER}/keybindings.json"
}




### First things first
######################

if [[ $# -gt 1 ]]; then
    printf "\n"
    printf "═══════════════════ Warning ═══════════════════\n"
    printf "Too many arguments: no operations were executed\n"
    exit 1
elif [[ $# -eq 0 ]]; then
    printf "╔═══════════════════ Help ══════════════════╗\n"
    printf "║ [--movi] reset VSCode Vim-like style      ║\n"
    printf "║ [--novi] reset VSCode without Vim goodies ║\n"
    printf "║ [--zero] remove all VSCode configurations ║\n"
    printf "╚═══════════════════════════════════════════╝\n"
    exit 0
elif [[ $1 != "--movi" && $1 != "--novi" && $1 != "--zero" ]]; then
    printf "\n"
    printf "══════════════════ Warning ══════════════════\n"
    printf "Unknown argument: no operations were executed\n"
    exit 1
fi




### Ready?
##########

read -p "Resetting VSCode (enter to continue)"




### Zero
########

if [[ $1 == "--zero" ]]; then
    OPERATION="REMOVING ALL CODE CONFIGURATIONS"
    USER="${HOME}/.config/Code/User"
    CODE="code"
    _zero
    # ---
    printf "\n"
    printf "══════════════ We're done here ═════════════\n"
    printf "Enjoy your vanilla VSCode with no extensions\n"
    exit 0
fi




### ~/bin/resetters/code
########################

# VSpaceCode configuration files (settings and keybindings) folder
# and a numeric counter to check if at least one operation was executed.
CONF="${HOME}/bin/resetters/code"




### Reset configurations
########################

if [[ $1 == "--novi" ]]; then
    OPERATION="RESETTING CODE"
    USER="${HOME}/.config/Code/User"
    CODE="code"
    _novi
    # ---
    printf "\n"
    printf "═════ We're done here ═════\n"
    printf "Enjoy your life with VSCode\n"
    exit 0
fi


if [[ $1 == "--movi" ]]; then
    OPERATION="RESETTING CODE"
    USER="${HOME}/.config/Code/User"
    CODE="code"
    _reset
    # ---
    printf "\n"
    printf "═══════════ We're done here ══════════\n"
    printf "Enjoy your Vim-Styled life with VSCode\n"
    exit 0
fi


printf "\n"
printf "═══════════════════ Warning ═══════════════════\n"
printf "Something went wrong: you should never see this\n"
