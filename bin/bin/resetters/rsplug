#!/usr/bin/env bash

# This script updates some useful Vim plugins to their latest versions:
#   noflag -> resets Vim 8 plugins only
#   --vim9 -> updates Vim to version 9 (via Ubuntu PPA)
#             and resets both Vim 8 and Vim 9 plugins
#   --zero -> removes all plugins (rm -rf ~/.vim/pack)
#
# Here the full set of plugins installed by this script:
# ctrlp, fugitive, commentary, surround, repeat, lexima, context, ale, copilot.


### Functions
#############

_reset () {
    # If the plugin folder exists, we update it with a git pull;
    # if it doesn't exist, we clone the plugin from GitHub.
    # ---
    printf "%s\n" "${OPERATION}"
    [[ -d "${PLUGIN}" ]] && git -C "${PLUGIN}" pull || git clone "${REPOSITORY}" "${PLUGIN}"
}

# ---

_check () {
    # If Vim is not version 9 and we're on Ubuntu, we add the PPA and upgrade Vim;
    # if it is not the case we cannot go no further and you have to manually install Vim 9
    # ---
    [[ "$(vim --version | grep -oE 'Vi IMproved 9')" == "Vi IMproved 9" ]] && return
    # ---
    if [[ $(uname -a) =~ "Ubuntu" ]]; then
        printf "\n"
        printf "UPGRADING VIM\n"
        [[ $(grep -qr "^deb .*jonathonf/vim" /etc/apt/sources.list) ]] || sudo add-apt-repository ppa:jonathonf/vim
        sudo apt-get update
        sudo apt-get install -qq -y vim-gtk3
    else
        printf "\n"
        printf "==================== Warning! ====================\n"
        printf "Install Vim 9 manually and run this script again.\n"
        exit 1
    fi
}

# ---

_node () {
    # Copilot requires Node.js >= 16 so, if Node.js is not
    # installed or is older than version 16, we update it.
    # ---
    [[ -x "$(command -v "node")" && $(node --version | cut -d v -f2 | awk -F. '{print $1}') -ge 16 ]] && return
    # ---
    printf "Updating Node.js to the latest LTS version ...\n"
    case $(uname -a) in
        *Ubuntu*)
            curl -fsSL https://deb.nodesource.com/setup_lts.x | sudo -E bash - &>/dev/null
            sudo apt-get install -qq -y nodejs
            ;;
        *Debian*)
            curl -fsSL https://deb.nodesource.com/setup_lts.x | bash - &>/dev/null
            apt-get install -qq -y nodejs
            ;;
        *)
            printf "?\n"
            ;;
    esac
}




### Ready?
##########

read -p "Resetting Vim plugins (enter to continue)"




### Check
#########

if [[ ! -x "$(command -v "vim")" ]]; then
    printf "\n"
    printf "==================== Warning! ====================\n"
    printf "Vim is not installed: no operations were executed.\n"
    exit 1
fi

# ---

if [[ $# -gt 1 ]]; then
    printf "\n"
    printf "=================== Warning! ===================\n"
    printf "Too many arguments: no operations were executed.\n"
    exit 1
elif [[ $# -eq 1 && $1 != "--vim9" && $1 != "--zero" ]]; then
    printf "\n"
    printf "================== Warning! ==================\n"
    printf "Unknown argument: no operations were executed.\n"
    exit 1
fi




### Zero
########

if [[ $1 == "--zero" ]]; then
    printf "REMOVING ALL PLUGINS\n"
    rm -rf "${HOME}/.vim/pack"
    # ---
    printf "\n"
    printf "============ We're done here ==========\n"
    printf "Enjoy your vanilla Vim with no plugins.\n"
    exit 0
fi




### ~/.vim/pack/plugins/start
#############################

# Vim internal plugins folder (~/.vim/pack/plugins/start);
# let's crate it if it doesn't exist!
START="${HOME}/.vim/pack/plugins/start"
[[ -d "${START}" ]] || mkdir -p "${START}"




### Plug 8
##########

OPERATION="RESETTING CTRLP"
REPOSITORY="https://github.com/ctrlpvim/ctrlp.vim"
PLUGIN="${START}/ctrlp"
_reset

# ---

printf "\n"
OPERATION="RESETTING FUGITIVE"
REPOSITORY="https://github.com/tpope/vim-fugitive"
PLUGIN="${START}/fugitive"
_reset

# ---

printf "\n"
OPERATION="RESETTING COMMENTARY"
REPOSITORY="https://github.com/tpope/vim-commentary"
PLUGIN="${START}/commentary"
_reset

# ---

printf "\n"
OPERATION="RESETTING SURROUND"
REPOSITORY="https://github.com/tpope/vim-surround"
PLUGIN="${START}/surround"
_reset

# ---

printf "\n"
OPERATION="RESETTING REPEAT"
REPOSITORY="https://github.com/tpope/vim-repeat"
PLUGIN="${START}/repeat"
_reset

# ---

printf "\n"
OPERATION="RESETTING LEXIMA"
REPOSITORY="https://github.com/cohama/lexima.vim"
PLUGIN="${START}/lexima"
_reset

# ---

printf "\n"
OPERATION="RESETTING CONTEXT"
REPOSITORY="https://github.com/wellle/context.vim"
PLUGIN="${START}/context"
_reset

# ---

printf "\n"
OPERATION="RESETTING ALE"
REPOSITORY="https://github.com/dense-analysis/ale"
PLUGIN="${START}/ale"
_reset

# ---

# (Over)write a simple config-file for Vim 8
# plugins for keymaps and other little things.
PLUGME="${START}/plugme/plugin"
RESETTERS="${HOME}/bin/resetters/vim"
[[ -d "${PLUGME}" ]] || mkdir -p "${PLUGME}"
cat "${RESETTERS}/plug8.vim" > "${PLUGME}/plug8.vim"

# ---

if [[ $# -eq 0 ]]; then
    printf "\n"
    printf "=========== We're done here ===========\n"
    printf "Enjoy your Vim-Plugged life with Vim 8.\n"
    exit 0
fi




### Plug 9
##########

_check

# ---

printf "\n"
OPERATION="RESETTING COPILOT"
REPOSITORY="https://github.com/github/copilot.vim"
PLUGIN="${START}/copilot"
_reset

# ---

# (Over)write a simple config-file for Vim 9
# plugins for keymaps and other little things.
cat "${RESETTERS}/plug9.vim" > "${PLUGME}/plug9.vim"

# ---

printf "\n"
printf "=========== We're done here ===========\n"
printf "Enjoy your Vim-Plugged life with Vim 9.\n"
