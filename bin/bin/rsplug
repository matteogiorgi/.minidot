#!/usr/bin/env bash


### Info
########

read -p "Installing/updating your Vim plugins (enter to continue)"
if [[ ! -x "$(command -v "vim")" ]]; then
    printf "vim is not installed\n"
    exit 1
fi

# create ~/.vim/pack/plugins/start if it doesn't exist
# (to store our plugins) and jump into it
[[ -d ~/.vim/pack/plugins/start ]] || mkdir -p ~/.vim/pack/plugins/start
cd ~/.vim/pack/plugins/start




### Vim 8 plugins
#################

if [[ ! -d fugitive ]]; then
    printf "INSTALLING FUGITIVE\n"
    git clone https://github.com/tpope/vim-fugitive fugitive
else
    printf "UPDATING FUGITIVE\n"
    cd fugitive
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d commentary ]]; then
    printf "INSTALLING COMMENTARY\n"
    git clone https://github.com/tpope/vim-commentary commentary
else
    printf "UPDATING COMMENTARY\n"
    cd commentary
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d surround ]]; then
    printf "INSTALLING SURROUND\n"
    git clone https://github.com/tpope/vim-surround surround
else
    printf "UPDATING SURROUND\n"
    cd surround
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d repeat ]]; then
    printf "INSTALLING REPEAT\n"
    git clone https://github.com/tpope/vim-repeat repeat
else
    printf "UPDATING REPEAT\n"
    cd repeat
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d context ]]; then
    printf "INSTALLING CONTEXT\n"
    git clone https://github.com/wellle/context.vim context
else
    printf "UPDATING CONTEXT\n"
    cd context
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d autopairs ]]; then
    printf "INSTALLING AUTOPAIRS\n"
    git clone https://github.com/jiangmiao/auto-pairs autopairs
else
    printf "UPDATING AUTOPAIRS\n"
    cd autopairs
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d ale ]]; then
    printf "INSTALLING ALE\n"
    git clone https://github.com/dense-analysis/ale ale
else
    printf "UPDATING ALE\n"
    cd ale
    git pull
    cd - &>/dev/null
fi

# no arguments have been prompted
# we're done here, enjoy vimming around
if [[ ! -n "$1" ]]; then
    printf "\n"
    printf "Enjoy your Vim-Plugged life!\n"
    exit 1
fi




### Vim 9 plugins (Ubuntu only)
###############################

# if the argumnet are wrong,
# we cannot go no further
if [[ "$1" != "vim9" ]]; then
    printf "\n"
    printf "%s is not a valid option\n" "$1"
    exit 1
fi

# if Vim is not version 9 and we're on Ubuntu, we add the PPA and upgrade Vim;
# if it is not the case we cannot go no further and you have to manually install Vim 9
if [[ "$(vim --version | grep -oE 'Vi IMproved 9')" != "Vi IMproved 9" ]]; then
    if [[ $(uname -a) =~ "Ubuntu" ]]; then
        printf "\n"
        printf "UPGRADING VIM\n"
        [[ $(grep -qr "^deb .*jonathonf/vim" /etc/apt/sources.list) ]] || sudo add-apt-repository ppa:jonathonf/vim
        sudo apt update
        sudo apt install -qq -y vim-gtk3
    else
        printf "\n"
        printf "This is not Ubuntu, you have to manually install Vim 9!\n"
        exit 1
    fi
fi

printf "\n"
if [[ ! -d fuzzyy ]]; then
    printf "INSTALLING FUZZYY\n"
    git clone https://github.com/hahdookin/minifuzzy.vim
else
    printf "UPDATING FUZZYY\n"
    cd fuzzyy
    git pull
    cd - &>/dev/null
fi

printf "\n"
if [[ ! -d copilot ]]; then
    printf "INSTALLING COPILOT\n"
    [[ -x "$(command -v "node")" ]] || sudo apt install -qq -y nodejs
    git clone https://github.com/github/copilot.vim copilot
else
    printf "UPDATING COPILOT\n"
    cd copilot
    git pull
    cd - &>/dev/null
fi

# if you already have the rsplug.vim file
# (used to configure the pugins we yust installed),
# we're done here, enjoy vimming around
if [[ -e "rsplug/plugin/rsplug.vim" ]]; then
    printf "\n"
    printf "Enjoy your Vim-Plugged life!\n"
    exit 1
fi

# write a simple config-file
# (mappings and other little things)
mkdir -p rsplug/plugin
cat 2>/dev/null > rsplug/plugin/rsplug.vim <<-EOF
" FUZZYY CONFIG
let g:enable_fuzzyy_keymaps = 0
let g:files_respect_gitignore = 1
let g:fuzzyy_keymaps = {
        \      'menu_up': ["\<C-k>", "\<Up>"],
        \      'menu_down': ["\<C-j>", "\<Down>"],
        \      'menu_select': ["\<CR>"],
        \      'preview_up': ["\<C-u>"],
        \      'preview_down': ["\<C-d>"],
        \      'exit': ["\<Esc>", "\<C-c>"],
        \ }


" COPILOT CONFIG
let g:copilot_enabled = v:false
imap <silent><C-H> <Plug>(copilot-dismiss)
imap <silent><C-J> <Plug>(copilot-next)
imap <silent><C-K> <Plug>(copilot-previous)
imap <silent><C-L> <Plug>(copilot-suggest)
EOF




### Bye bye
###########

printf "\n"
printf "Enjoy your Vim-Plugged life!\n"
